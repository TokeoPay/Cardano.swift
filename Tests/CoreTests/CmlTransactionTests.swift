import XCTest
#if !COCOAPODS
@testable import CardanoCore
#else
@testable import Cardano
#endif

import Foundation


final class CmlTransactionTests: XCTestCase {
    let initialize: Void = _initialize
    
    func test_merge_witness_set() throws {
        let txn = "84a400868258202792c2ff03aa4ce9667b049d64776e495f3a75c2cc4b0e979f5fb573ed5045e6018258200faf32b1214fada3bef919720c099adb249213c795b28d489c7316c07549095605825820e6150f3956d1bd527cf02935e8278f8c34fe63e0726c3cfecb561624e9c0e07a058258203f6873a19e9c802145787c2bb111cad62d1af708de8f9b46cbc4fc23818ea29a06825820a00d5137c76a9afdae2621cf31bf1f527fd68b59520405388d737948b8e1da1e03825820e6150f3956d1bd527cf02935e8278f8c34fe63e0726c3cfecb561624e9c0e07a03018282583901b43b148f9c0ed673ee20019cb3623d5d2bed7e2da001ea3096e2d9bf9c4bcdd7ff3cb4e66593f9274583b066fafdb22453774411602f901b1a005b8d8082583901289cb849c56ac050a19fc84f7cdfea36edb30100e141d5d6c59c6d5cfd34edf3440f0a8875be6f7998c59810aed6beab8426e773fa550a93821a0021d733a1581cab434d53b6bb2352714a8940d2a12db8e083c9bb7cd4dbff7080118fa648546f6b656f3034340148546f6b656f3130320148546f6b656f3130340148546f6b656f3232370148546f6b656f3339390148546f6b656f34303301021a0002c7cd0758201e8eb8575d879922d701c12daa7366cb71b6518a9500e083a966a8e66b56ed23a0f5a11902a2a1636d736765546f6b656f";
        
        let witness = "a100818258203a9396e952b3d7b4f24325b77199b2e0c2bd0f9d2797542a6b15320f4dd1f451584078df05ca3f501752e841defb5a7e0db35a7f59bdcdc54dc15b14440e5aa6c2d93a08425abbdc379a50cdfd8f47548b7b9d12ff8b909a008ca52afff184d92703"
        
        let result = try tx_merge_in_witness_set(transaction: Data(hex: txn)!, witness_set: Data(hex: witness)!)
        
        
        let expected_result = "84a400868258202792c2ff03aa4ce9667b049d64776e495f3a75c2cc4b0e979f5fb573ed5045e6018258200faf32b1214fada3bef919720c099adb249213c795b28d489c7316c07549095605825820e6150f3956d1bd527cf02935e8278f8c34fe63e0726c3cfecb561624e9c0e07a058258203f6873a19e9c802145787c2bb111cad62d1af708de8f9b46cbc4fc23818ea29a06825820a00d5137c76a9afdae2621cf31bf1f527fd68b59520405388d737948b8e1da1e03825820e6150f3956d1bd527cf02935e8278f8c34fe63e0726c3cfecb561624e9c0e07a03018282583901b43b148f9c0ed673ee20019cb3623d5d2bed7e2da001ea3096e2d9bf9c4bcdd7ff3cb4e66593f9274583b066fafdb22453774411602f901b1a005b8d8082583901289cb849c56ac050a19fc84f7cdfea36edb30100e141d5d6c59c6d5cfd34edf3440f0a8875be6f7998c59810aed6beab8426e773fa550a93821a0021d733a1581cab434d53b6bb2352714a8940d2a12db8e083c9bb7cd4dbff7080118fa648546f6b656f3034340148546f6b656f3130320148546f6b656f3130340148546f6b656f3232370148546f6b656f3339390148546f6b656f34303301021a0002c7cd0758201e8eb8575d879922d701c12daa7366cb71b6518a9500e083a966a8e66b56ed23a100818258203a9396e952b3d7b4f24325b77199b2e0c2bd0f9d2797542a6b15320f4dd1f451584078df05ca3f501752e841defb5a7e0db35a7f59bdcdc54dc15b14440e5aa6c2d93a08425abbdc379a50cdfd8f47548b7b9d12ff8b909a008ca52afff184d92703f5a11902a2a1636d736765546f6b656f"
        
        
        XCTAssertEqual(result.hex(prefix: false),expected_result, "Signed and Merged TX should be identical")
    }
    
    func testTxDetailsSwap() throws {
        let txn = "84a8008b82582031140f634dca2fa90b34580c51681f5bb3fcedcef40247d66399a3cf8c2a37db068258200aa301cc1de373da47b308cbe2201f2ac8a3c02dbc85031afd8be4c3e4f8759600825820e45459e16332dfec69495ef64bd51af6d37819353920c9d371f738b9046871a100825820528602a6fd3cec24bca41ae41e416fcdf3102514840794393618ac24041fc96908825820f5468b6c3c08477e8e3573e316fafb6fea67022df5038d0eb58c284020217d8e038258202e8a27f8702139f9ac19c88bb9d94c07afdf559410a6a975ae771e1a179c8620028258203acca768e7afabfd615c92fdd329e610975347efbb5a89624f8493c25182aee6038258207a95bb51353187801a71de7597e5c609a51574b9a2e6076a5a115e41e238aa8f05825820d0cbf35978b464f5ca557cceaba8ecc01d1dca343ea17340344b75d35c979112078258207ff43fc29c9b23ec936e28153a37d4b395fc441d613deac427ef58369a3620bc078258201cb7c5c2f2fba0dbad2147a4159baa1e0f8d22b6f0c5807a1167a7aa836410e607018383581d7186ae9eebd8b97944a45201e4aec1330a72291af2d071644bba0159591a00a7d8c058202349e92bf24d05c8f84d13878e787ee4b7619349e7f0dcec28a1d5354b42523d82583901ffebcc9e31749eb5803e396202d84e3b436ec362463b2fd70fb4c8819086fc9117b2dadb43da1f922c46039a47d51bff09433dcdd18f1cce1a000f424082583901289cb849c56ac050a19fc84f7cdfea36edb30100e141d5d6c59c6d5cfd34edf3440f0a8875be6f7998c59810aed6beab8426e773fa550a93821a003032bfa1581cab434d53b6bb2352714a8940d2a12db8e083c9bb7cd4dbff7080118fab48546f6b656f3035360148546f6b656f3035380148546f6b656f3133300148546f6b656f3133390148546f6b656f3135380148546f6b656f3137340148546f6b656f3236350148546f6b656f3239370148546f6b656f3336350148546f6b656f3434330148546f6b656f34343601021a0003ae81031a078cf3f4075820605439042538ad0a50af5aa63796c02bf66cd72de951e6750608006300ea6ded081a078cf0700b5820ee8b68a5bd70f440ab4448fa7e6f67e2af54710c30439a0b16b5627221d476920e82581c289cb849c56ac050a19fc84f7cdfea36edb30100e141d5d6c59c6d5c581cfd34edf3440f0a8875be6f7998c59810aed6beab8426e773fa550a93a1049fd8799fd8799fd8799fd8799f581c289cb849c56ac050a19fc84f7cdfea36edb30100e141d5d6c59c6d5cffd8799fd8799fd8799f581cfd34edf3440f0a8875be6f7998c59810aed6beab8426e773fa550a93ffffffff581c289cb849c56ac050a19fc84f7cdfea36edb30100e141d5d6c59c6d5c1b000001900fb7c556d8799fd8799f4040ffd8799f581cf43a62fdc3965df486de8a0d32fe800963589c41b38946602a0dc5354441474958ffffffd8799fd879801a19542bc1fffffff5a11902a2a1636d7367826f44657868756e74657220547261646570506172746e657220546f6b656f506179"
        
        let txnData = Data(hex: txn)
        
        assert(txnData != nil)
        
        let txDetails = try SwiftTxDetails(transaction: txnData!)
        
        let signerArr = txDetails.signers.map { signer in signer.hex(prefix: false) }

        print("TxDetails", signerArr)
        
        XCTAssertEqual(signerArr.count, 2, "Incorrect signer calc");

    }
    
    func testTxUtxoForMempool() throws {
        
        let txn = "84a9008382582048be06cebaaed874f6a27ee61d7f2a18cd7efbbcc0c0708c73566825890700e60082582088dc1916f3579e97f41e5e0f4ba9c245e6179608f19f7e680d04ca8e8000a8970182582017ff24307d62c71cf06e7d9b7fe26e1eabf1af190204b819bbf714f03b30c9af0101868258390170e60f3b5ea7153e0acc7a803e4401d44b8ed1bae1c7baaad1a62a721e78aae7c90cc36d624f7b3bb6d86b52696dc84e490f343eba89005f1a000f4240825839019737419ac8cf4a69ac64440a1a734c2c50b18d423e499f289a5267d4bf1aacd8be15b54f3cb0837e92302e2040c89718973b5d8f763a03931a000f424082583901d2f63bb93a46252714598085271f2368e8669f8aaf8f5fab4e4fc2f5d6a3bf692f79c73710e92f431adf0bcb4aa17ecb0b3b126bb1defa5d1a002dc6c082583901a298fd66dc9060b11f0a8679cd8516ef14c31236c2dfb1a2ae933788131f44c4a43b3c6ea5b2aaf660d167f894fa133ae33d5cdc62a3d9f0821a002df852a7581c279c909f348e533da5808898f87f9a14bb2c3dfbbacccd631d927a3fa144534e454b1930ad581c693c3defceb1b7d27d1bf91f52b65b59b11b66b066d10c8d6d461f4ca154000de140515244414e4f5345525645523033323201581c77999d5a1e09f9bdc16393cab713f26345dc0827a9e5134cf0f9da37a24c4d756c67614b6f6e67333731014d4d756c67614b6f6e673338313901581c95a427e384527065f2f8946f5e86320d0117839a5e98ea2c0b55fb00a14448554e541a06052340581ca5b2464b242dcbc97c1f65e85753b04ba979645f693a806a394a4931a1494d69644b6e696768741a867e44fc581ca7bf4ce10dca4f5f99b081c4ea84e0e3f919775b953324e09edea852a14d536865446576696c733131363601581cba92e5f4665a026f7d5f2f223d398d2d8b649e147b5163b759bd61a0ad4a54696765727a32373739014a54696765727a33383630014a54696765727a33383631014a54696765727a33383632014a54696765727a33383633014a54696765727a33383634014a54696765727a33383635014a54696765727a33383636014a54696765727a33383637014a54696765727a33383638014a54696765727a33383639014a54696765727a33383730014a54696765727a333837310182583901a298fd66dc9060b11f0a8679cd8516ef14c31236c2dfb1a2ae933788131f44c4a43b3c6ea5b2aaf660d167f894fa133ae33d5cdc62a3d9f0821a001898a4a3581cba92e5f4665a026f7d5f2f223d398d2d8b649e147b5163b759bd61a0a24a54696765727a33383732014a54696765727a3532303301581cbb143df7e6472b158014023d8a1c592d38be8771ce4c01f4fcd65c63a148323630313235363301581cc72d0438330ed1346f4437fcc1c263ea38e933c1124c8d0f2abc6312a2484b5749433034303501484b574943313230340182583901a298fd66dc9060b11f0a8679cd8516ef14c31236c2dfb1a2ae933788131f44c4a43b3c6ea5b2aaf660d167f894fa133ae33d5cdc62a3d9f01a032e7f60021a0007465d031a074b3efa0b58204bcd043768b51437bc8087ffe6b740ada67f7a899d12c1445d28a00808ea79d80d8182582017ff24307d62c71cf06e7d9b7fe26e1eabf1af190204b819bbf714f03b30c9af011082583901a298fd66dc9060b11f0a8679cd8516ef14c31236c2dfb1a2ae933788131f44c4a43b3c6ea5b2aaf660d167f894fa133ae33d5cdc62a3d9f01a036900e0111a000ae98c12818258209a32459bd4ef6bbafdeb8cf3b909d0e3e2ec806e4cc6268529280b0fc1d06f5b00a2049fd8799f581cd2f63bb93a46252714598085271f2368e8669f8aaf8f5fab4e4fc2f59fd8799fd8799fd8799f581c70e60f3b5ea7153e0acc7a803e4401d44b8ed1bae1c7baaad1a62a72ffd8799fd8799fd8799f581c1e78aae7c90cc36d624f7b3bb6d86b52696dc84e490f343eba89005fffffffffa140d8799f00a1401a000f4240ffffd8799fd8799fd8799f581c9737419ac8cf4a69ac64440a1a734c2c50b18d423e499f289a5267d4ffd8799fd8799fd8799f581cbf1aacd8be15b54f3cb0837e92302e2040c89718973b5d8f763a0393ffffffffa140d8799f00a1401a000f4240ffffd8799fd8799fd8799f581cd2f63bb93a46252714598085271f2368e8669f8aaf8f5fab4e4fc2f5ffd8799fd8799fd8799f581cd6a3bf692f79c73710e92f431adf0bcb4aa17ecb0b3b126bb1defa5dffffffffa140d8799f00a1401a002dc6c0ffffffffff0581840001d87a80821a002f5dee1a34ddb004f5f6"
        let txnData = Data(hex: txn)
        
        let x = try SwiftMempoolUtxos(tx: txnData!)
        let jsonEncoder = JSONEncoder()
        let jsonData = try jsonEncoder.encode(x)
        
        let json = String(data: jsonData, encoding: String.Encoding.utf8)
        print("SwiftMempoolUtxos", json)
    }
    
    
    func testMynthTxDetails() throws {
        let txn = "84ac0081825820b81de9801c8e827520c99edc1b914cd9f7d0076f0ab2904bf5d138326c1d44ac020182a300583911c666bc4d42515ec470cc69a62fe510e02961ed5165e89235cfd9b6b79c4bcdd7ff3cb4e66593f9274583b066fafdb22453774411602f901b01821a002dc6c0a1581c8525356c4877ff88c04caec2f4e1e1f283598de40e920fdadb3da996a3582023398ff4e1253679af54639773543eb315b9cde03238381be58d62c63db211fd015820ee155ace9c40292074cb6aff8c9ccdd273c81648ff1149ef36bcea6ebb8a3e25015820847bf4ee96631f0b60e31cd62ccda0699af009707923b240c0e62f7f6ae6f00d01028201d81858dbd8798b00582023398ff4e1253679af54639773543eb315b9cde03238381be58d62c63db211fd40405820ee155ace9c40292074cb6aff8c9ccdd273c81648ff1149ef36bcea6ebb8a3e25581c92776616f1f32c65a173392e4410a3d8c39dcf6ef768c73af164779c454d795553445820847bf4ee96631f0b60e31cd62ccda0699af009707923b240c0e62f7f6ae6f00dd8798219aea51a000186a0581c44c8e36bfe2030f4b30ae7f1db065bbccd2a04dc9fc5c3c9aaaed3f35820aa262c5799cf52dd25c3b1bb5256a363b1cbe2e061d040de267694dd7838c6a582583901b43b148f9c0ed673ee20019cb3623d5d2bed7e2da001ea3096e2d9bf9c4bcdd7ff3cb4e66593f9274583b066fafdb22453774411602f901b1a01f3c8e3021a000391f2031a07c9a0ca05a1581df12a646ae6eefe42a24fff4b710cb2ba9149bff794a2505729876cf19c0007582029c864db5d0c1c34e75dd7db02bc7dead25b68e57eb94a9f23ed40a46d96a0e109a1581c8525356c4877ff88c04caec2f4e1e1f283598de40e920fdadb3da996a3582023398ff4e1253679af54639773543eb315b9cde03238381be58d62c63db211fd015820ee155ace9c40292074cb6aff8c9ccdd273c81648ff1149ef36bcea6ebb8a3e25015820847bf4ee96631f0b60e31cd62ccda0699af009707923b240c0e62f7f6ae6f00d010b5820dc8c410445b1a4cadd8645d0a5d34fddbc863d920c1a4e3604afb53c1ed840930d81825820b81de9801c8e827520c99edc1b914cd9f7d0076f0ab2904bf5d138326c1d44ac021082583901b43b148f9c0ed673ee20019cb3623d5d2bed7e2da001ea3096e2d9bf9c4bcdd7ff3cb4e66593f9274583b066fafdb22453774411602f901b1a01d8d655111a004c4b401283825820187989e3bfd1e88597c93b1c2eadb7cfa767e9d5084e4755298b78248907297200825820d1ec9ca33f7d36ba26f6a979b98d13387e7aaf3c07b73b3ca51378c4fc4818b000825820611f1fc69fbda0cdc7e63bcee88bd8ef4432a37ab351fdb3307962c4d70b6ef100a10582840100d87980821a00014b8d1a01e9503e840300d87980821a00037eed1a05448e34f5a11902a2a16870726f766964657265746f6b656f"
        let txnData = Data(hex: txn)
        
        assert(txnData != nil)
        
        let txDetails = try SwiftTxDetails(transaction: txnData!)
        
        let jsonEncoder = JSONEncoder()
        let jsonData = try jsonEncoder.encode(txDetails)
        
        let json = String(data: jsonData, encoding: String.Encoding.utf8)
        print("TxDetails", json!)
        
    }
    
    
    
    func testTxDetails() throws {
        
        let txn = "84a9008382582048be06cebaaed874f6a27ee61d7f2a18cd7efbbcc0c0708c73566825890700e60082582088dc1916f3579e97f41e5e0f4ba9c245e6179608f19f7e680d04ca8e8000a8970182582017ff24307d62c71cf06e7d9b7fe26e1eabf1af190204b819bbf714f03b30c9af0101868258390170e60f3b5ea7153e0acc7a803e4401d44b8ed1bae1c7baaad1a62a721e78aae7c90cc36d624f7b3bb6d86b52696dc84e490f343eba89005f1a000f4240825839019737419ac8cf4a69ac64440a1a734c2c50b18d423e499f289a5267d4bf1aacd8be15b54f3cb0837e92302e2040c89718973b5d8f763a03931a000f424082583901d2f63bb93a46252714598085271f2368e8669f8aaf8f5fab4e4fc2f5d6a3bf692f79c73710e92f431adf0bcb4aa17ecb0b3b126bb1defa5d1a002dc6c082583901a298fd66dc9060b11f0a8679cd8516ef14c31236c2dfb1a2ae933788131f44c4a43b3c6ea5b2aaf660d167f894fa133ae33d5cdc62a3d9f0821a002df852a7581c279c909f348e533da5808898f87f9a14bb2c3dfbbacccd631d927a3fa144534e454b1930ad581c693c3defceb1b7d27d1bf91f52b65b59b11b66b066d10c8d6d461f4ca154000de140515244414e4f5345525645523033323201581c77999d5a1e09f9bdc16393cab713f26345dc0827a9e5134cf0f9da37a24c4d756c67614b6f6e67333731014d4d756c67614b6f6e673338313901581c95a427e384527065f2f8946f5e86320d0117839a5e98ea2c0b55fb00a14448554e541a06052340581ca5b2464b242dcbc97c1f65e85753b04ba979645f693a806a394a4931a1494d69644b6e696768741a867e44fc581ca7bf4ce10dca4f5f99b081c4ea84e0e3f919775b953324e09edea852a14d536865446576696c733131363601581cba92e5f4665a026f7d5f2f223d398d2d8b649e147b5163b759bd61a0ad4a54696765727a32373739014a54696765727a33383630014a54696765727a33383631014a54696765727a33383632014a54696765727a33383633014a54696765727a33383634014a54696765727a33383635014a54696765727a33383636014a54696765727a33383637014a54696765727a33383638014a54696765727a33383639014a54696765727a33383730014a54696765727a333837310182583901a298fd66dc9060b11f0a8679cd8516ef14c31236c2dfb1a2ae933788131f44c4a43b3c6ea5b2aaf660d167f894fa133ae33d5cdc62a3d9f0821a001898a4a3581cba92e5f4665a026f7d5f2f223d398d2d8b649e147b5163b759bd61a0a24a54696765727a33383732014a54696765727a3532303301581cbb143df7e6472b158014023d8a1c592d38be8771ce4c01f4fcd65c63a148323630313235363301581cc72d0438330ed1346f4437fcc1c263ea38e933c1124c8d0f2abc6312a2484b5749433034303501484b574943313230340182583901a298fd66dc9060b11f0a8679cd8516ef14c31236c2dfb1a2ae933788131f44c4a43b3c6ea5b2aaf660d167f894fa133ae33d5cdc62a3d9f01a032e7f60021a0007465d031a074b3efa0b58204bcd043768b51437bc8087ffe6b740ada67f7a899d12c1445d28a00808ea79d80d8182582017ff24307d62c71cf06e7d9b7fe26e1eabf1af190204b819bbf714f03b30c9af011082583901a298fd66dc9060b11f0a8679cd8516ef14c31236c2dfb1a2ae933788131f44c4a43b3c6ea5b2aaf660d167f894fa133ae33d5cdc62a3d9f01a036900e0111a000ae98c12818258209a32459bd4ef6bbafdeb8cf3b909d0e3e2ec806e4cc6268529280b0fc1d06f5b00a2049fd8799f581cd2f63bb93a46252714598085271f2368e8669f8aaf8f5fab4e4fc2f59fd8799fd8799fd8799f581c70e60f3b5ea7153e0acc7a803e4401d44b8ed1bae1c7baaad1a62a72ffd8799fd8799fd8799f581c1e78aae7c90cc36d624f7b3bb6d86b52696dc84e490f343eba89005fffffffffa140d8799f00a1401a000f4240ffffd8799fd8799fd8799f581c9737419ac8cf4a69ac64440a1a734c2c50b18d423e499f289a5267d4ffd8799fd8799fd8799f581cbf1aacd8be15b54f3cb0837e92302e2040c89718973b5d8f763a0393ffffffffa140d8799f00a1401a000f4240ffffd8799fd8799fd8799f581cd2f63bb93a46252714598085271f2368e8669f8aaf8f5fab4e4fc2f5ffd8799fd8799fd8799f581cd6a3bf692f79c73710e92f431adf0bcb4aa17ecb0b3b126bb1defa5dffffffffa140d8799f00a1401a002dc6c0ffffffffff0581840001d87a80821a002f5dee1a34ddb004f5f6"
        let txnData = Data(hex: txn)
        
        assert(txnData != nil)
        
        let txDetails = try SwiftTxDetails(transaction: txnData!)
        
        let jsonEncoder = JSONEncoder()
        let jsonData = try jsonEncoder.encode(txDetails.inputs)
        
        let json = String(data: jsonData, encoding: String.Encoding.utf8)
        print("TxDetails", json)
        
        
    }
}
